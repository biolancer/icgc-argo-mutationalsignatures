/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: MATRIXGENERATOR {
        publishDir = [
            path: { "${params.outdir}/matrixgenerator/${meta.id}/"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('version.yml') ? null : filename }
        ]
        ext.args = { [
            (params.ref)        ?   "--ref ${params.ref}"           : '',
            (params.exome)      ?   '--exome'                       : '',
        ].join(' ').trim()  }
    }

    withName: ASSESSMENT {
        publishDir = [
            path: { "${params.outdir}/assessment/${meta.id}/"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('version.yml') ? null : filename }
        ]
    }

    withName: ASSIGNMENT {
        publishDir = [
            path: { "${params.outdir}/assignment/${meta.id}/sigprofiler/"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('version.yml') ? null : filename }
        ]
        ext.args = { [
            (params.ref)                ?   "--ref ${params.ref}"                           : '',
            (params.exome)              ?   '--exome'                                       : '',
            (params.context)            ?   "--context ${params.context}"                   : '',
            (params.cosmic_version)     ?   "--cosmic_version ${params.cosmic_version}"     : "--cosmic_version 3",
            (params.exclude_sigs)       ?   "--exclude_sigs ${params.exclude_sigs}"         : '',
        ].join(' ').trim()  }
    }

    withName: ASSIGNMENT_ALT {
        publishDir = [
            path: { "${params.outdir}/assignment/${meta.id}/sigprofiler/"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('version.yml') ? null : filename }
        ]
        ext.args = { [
            (params.ref)                ?   "--ref ${params.ref}"                           : '',
            (params.context)            ?   "--context ${params.context}"                   : '',
        ].join(' ').trim()  }
    }

    withName: SIGNATURETOOLSLIB {
        publishDir = [
            path: { "${params.outdir}/assignment/${meta.id}/signaturetoolslib/"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('version.yml') ? null : filename }
        ]
        ext.args = { [
            (params.n_boots)                ?   "--boots ${params.n_boots}"                 : '',
        ].join(' ').trim()  }
    }

    withName: SIGNATURETOOLSLIB_ALT {
        publishDir = [
            path: { "${params.outdir}/assignment/${meta.id}/signaturetoolslib/"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('version.yml') ? null : filename }
        ]
        ext.args = { [
            (params.n_boots)                ?   "--boots ${params.n_boots}"                 : '',
        ].join(' ').trim()  }
    }

    withName: ERRORTRESHOLDING {
        publishDir = [
            path: { "${params.outdir}/errorthresholding/${meta.id}/"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('version.yml') ? null : filename }
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
}
